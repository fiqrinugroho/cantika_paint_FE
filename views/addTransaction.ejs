<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Cantika Paint | Input Penjualan</title>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
    <%- include('partials/header') %>
    <style>
      .custom-combobox {
        position: relative;
        display: inline-block;
      }
      .custom-combobox-toggle {
        position: absolute;
        top: 0;
        bottom: 0;
        margin-left: -1px;
        padding: 0;
      }
      .custom-combobox-input {
        margin: 0;
        padding: 5px 10px;
      }
      </style>
  </head>
  <body >
    <%- include('partials/navbar') %>
    <div class="container">
      <h2>Input Penjualan Toko <%=branch  %></h2>
      <input  type="number" class="form-control" value="<%= branchId %>" id="branchId" hidden>
      <input  type="text" class="form-control" value="<%= token %>" id="token" hidden>
      <div class="row g-1 mt-2">
        <div class="col-md-5">
          <div id="liveAlertPlaceholder" role="alert">
          </div>
        </div> 
      </div>
        <div class="row g-1 mt-2">
          <div class="col-sm-1">
            <label for="tanggal" class="form-label">Tanggal :</label>
          </div>
          <div class="col-md-4">
            <input
              placeholder="dd-mm-yyyy"
              type="date"
              class="form-control"
              id="trDate"
              name="trDate"
              value="<%= tgl %>"
              disabled
            />
          </div>
        </div>

        <div class="row g-1 mt-2">
          <div class="col-sm-1">
            <label for="jenis" class="form-label">Jenis :</label>
          </div>
          <div class="col-md-4">
            <select class="form-control" id="type" name="type" onchange="getSelectedTypeData()" required>
              <option value="pro">Pro</option>
              <option value="super">Super</option>
              <option value="multi">Multi</option>
            </select>
          </div>
        </div>

        <div class="row g-1 mt-2">
          <div class="col-sm-1">
            <label for="item" class="form-label">Warna : </label>
          </div>
          <div class="col-md-4 ui-widget">
            <select class="" id="combobox" name="color" required>
              <option value>Select one...</option>
            <% colors?.forEach(function(item, index) { %>
              <option value="<%= item.id  %>"><%= item.color %></option>
            <% }) %>
            </select>
          
            <!-- <button id="toggle">Show underlying select</button> -->
          </div>
        </div>

        <div class="row g-1 mt-2">
          <div class="col-sm-1">
            <label for="jumlah" class="form-label">Out :</label>
          </div>
          <div class="col-md-4">
            <input
              type="number"
              class="form-control"
              id="out"
              name="out"
              required
            />
          </div>
        </div>

        <button onclick="addTransaction()" type="submit" class="btn btn-primary mt-3">Tambah Laporan</button>
      </form>
    </div>
    <div class="container mt-3">
      <h2>Data Penjualan Toko <%=branch%></h2>
      <table id="datatablesSale" class="table table-striped table-bordered text-center" style="width:100%">
        <thead class="text-center">
          <tr>
            <th>Tanggal</th>
            <th>Jenis</th>
            <th>Warna</th>
            <th>Stok</th>
            <th>Out</th>
            <th>Stok Akhir</th>
            <th>Aksi</th>
          </tr>
        </thead>
        <tbody id="dataBody" name="dataBody" class="table-group-divider">
        <% if (transaction?.length > 0) { %>
          <% transaction?.forEach(function(trans, index) { %>
          <tr>
            <input type="text" hidden id="idData" value="<%= trans.id %>" />
            <td><%= formatDate(trans.transactionDate)%></td>
            <td><%= trans.item.type %></td>
            <td><%= trans.item.color %></td>
            <td><%= trans.stock %></td>
            <td><%= trans.out %></td>
            <td><%= trans.finalStock %></td>
            <td>
              <button type="button" class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal" data-bs-id="<%=trans.id%>" data-bs-data="<%=trans.out%>">Edit</button>
              <a href="#" onclick="deleteData(`<%= trans.id %>`,`/api/transaction/delete/`)" class="btn btn-danger btn-sm"
                >Delete</a
              >
            </td>
          </tr>
          <% }); %> <% } else { %>

          <% } %>
        </tbody>
      </table>
    </div>
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h1 class="modal-title fs-5" id="exampleModalLabel">Edit Data Penjualan</h1>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <form>
              <div id="liveAlertPlaceholder2" role="alert">
              </div>
               <input type="text" class="form-control" id="edit-id" name="id" hidden>
              <div class="mb-3">
                <div class="row g-1 mt-2">
                  <div class="col-sm-1">
                    <label for="edit-data" class="col-form-label">Out :</label>
                  </div>
                  <div class="col-md-5">
                    <input type="text" class="form-control" name="out" id="edit-data">
                  </div>
                </div>
              </div>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" onclick="updateTransaction()" class="btn btn-primary">Update</button>
              </div>
            </form>
        </div>
      </div>
    </div>
    <%- include('partials/footer') %>
    <!-- Tautkan library jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
    <script>
      $( function() {
        $.widget( "custom.combobox", {
          _create: function() {
            this.wrapper = $( "<span>" )
              .addClass( "custom-combobox" )
              .insertAfter( this.element );
     
            this.element.hide();
            this._createAutocomplete();
            this._createShowAllButton();
          },
     
          _createAutocomplete: function() {
            var selected = this.element.children( ":selected" ),
              value = selected.val() ? selected.text() : "";
     
            this.input = $( "<input>" )
              .appendTo( this.wrapper )
              .val( value )
              .attr( "title", "" )
              .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left " )
              .autocomplete({
                delay: 0,
                minLength: 0,
                source: this._source.bind( this )
              })
              .tooltip({
                classes: {
                  "ui-tooltip": "ui-state-highlight"
                }
              });
     
            this._on( this.input, {
              autocompleteselect: function( event, ui ) {
                ui.item.option.selected = true;
                this._trigger( "select", event, {
                  item: ui.item.option
                });
              },
     
              autocompletechange: "_removeIfInvalid"
            });
          },
     
          _createShowAllButton: function() {
            var input = this.input,
              wasOpen = false;
     
            $( "<a>" )
              .attr( "tabIndex", -1 )
              .attr( "title", "Show All Items" )
              .tooltip()
              .appendTo( this.wrapper )
              .button({
                icons: {
                  primary: "ui-icon-triangle-1-s"
                },
                text: false
              })
              .removeClass( "ui-corner-all" )
              .addClass( "custom-combobox-toggle ui-corner-right" )
              .on( "mousedown", function() {
                wasOpen = input.autocomplete( "widget" ).is( ":visible" );
              })
              .on( "click", function() {
                input.trigger( "focus" );
     
                // Close if already visible
                if ( wasOpen ) {
                  return;
                }
     
                // Pass empty string as value to search for, displaying all results
                input.autocomplete( "search", "" );
              });
          },
     
          _source: function( request, response ) {
            var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
            response( this.element.children( "option" ).map(function() {
              var text = $( this ).text();
              if ( this.value && ( !request.term || matcher.test(text) ) )
                return {
                  label: text,
                  value: text,
                  option: this
                };
            }) );
          },
     
          _removeIfInvalid: function( event, ui ) {
     
            // Selected an item, nothing to do
            if ( ui.item ) {
              return;
            }
     
            // Search for a match (case-insensitive)
            var value = this.input.val(),
              valueLowerCase = value.toLowerCase(),
              valid = false;
            this.element.children( "option" ).each(function() {
              if ( $( this ).text().toLowerCase() === valueLowerCase ) {
                this.selected = valid = true;
                return false;
              }
            });
     
            // Found a match, nothing to do
            if ( valid ) {
              return;
            }
     
            // Remove invalid value
            this.input
              .val( "" )
              .attr( "title", value + " didn't match any item" )
              .tooltip( "open" );
            this.element.val( "" );
            this._delay(function() {
              this.input.tooltip( "close" ).attr( "title", "" );
            }, 2500 );
            this.input.autocomplete( "instance" ).term = "";
          },
     
          _destroy: function() {
            this.wrapper.remove();
            this.element.show();
          }
        });
     
        $( "#combobox" ).combobox();
      } );
      </script>
  </body>
</html>
<% function formatDate(date) {
  const format = date.split('T');
  const parts = format[0].split('-')
  const formattedDate = `${parts[2]}-${parts[1]}-${parts[0]}`;
  return formattedDate;
} 
function todayDate() {
    const today = new Date();
    const year = today.getFullYear();
    let month = today.getMonth() + 1;
    let day = today.getDate();
    if (month < 10) {
        month = '0' + month;
    }
    if (day < 10) {
        day = '0' + day;
    }
    return `${year}-${month}-${day}`;
}

%>